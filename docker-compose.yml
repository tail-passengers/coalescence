version: '3.8'

services:
  middleware:
        image: middleware
        container_name: middleware
        restart: always
        build:
            context: ./middleware/
            dockerfile: Dockerfile
        ports:
            - "443:443"
        depends_on:
            - web
            - frontend
        volumes:
            - ./frontend/dist:/var/www/html/app

  db:
    image: postgres
    env_file:
      - ./backend/.env_sample

  web:
    build:
      context: ./backend
    image: web
    container_name: web
    volumes:
      - ./backend/back/:/app
    expose:
      - "443"
    command: sh -c "python manage.py makemigrations && python manage.py migrate && python manage.py loaddata test_user.json && python manage.py runserver 0.0.0.0:8000"

    env_file:
      - ./backend/.env_sample
    depends_on:
      - db
  
  frontend:
    build: ./frontend
    container_name: frontend
    restart: always
    volumes:
      - ./frontend:/app

  channels:
    image: redis
    ports:
      - "6379:6379"

networks:
    ts-network:
        driver: bridge

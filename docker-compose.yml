version: '3.8'

services:
  middleware:
    image: middleware
    container_name: middleware
    restart: always
    build:
        context: ./middleware/
        dockerfile: Dockerfile
    ports:
        - "80:80"
        - "443:443"
    depends_on:
        - web
        - frontend
    volumes:
        - dist:/var/www/html/
    networks:
        - ts-network

  db:
    image: postgres
    env_file:
      - ./.env
    networks:
        - ts-network

  web:
    build:
      context: ./backend
    image: web
    container_name: web
    volumes:
      - ./backend/back/:/app
    expose:
      - "443"
    command: sh -c "python manage.py makemigrations && python manage.py migrate && python manage.py loaddata test_user.json && python manage.py runserver 0.0.0.0:443"
    env_file:
      - ./.env
    depends_on:
      - db
    networks:
      - ts-network
  
  frontend:
    build: ./frontend
    container_name: frontend
    volumes:
      - dist:/app/dist
    depends_on:
      - web
    networks:
        - ts-network

  channels:
    image: redis
    ports:
      - "6379:6379"
    networks:
        - ts-network

networks:
    ts-network:
        driver: bridge

volumes:
  dist: